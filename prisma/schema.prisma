generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id               Int          @id @default(autoincrement())
  secret           String       @default("")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @default(now()) @updatedAt
  isActive         Boolean      @default(false)
  isRegistered     Boolean      @default(false)
  isVerified       Boolean      @default(false)
  isBrand          Boolean      @default(false)
  isBlacklisted    Boolean      @default(false)
  email            String       @unique
  name             String?
  password         String?
  posts            Post[]
  profile          Profile?
  accountCode      AccountCode?
  lastResendCodeAt DateTime?
}

model Profile {
  id                   Int       @id @default(autoincrement())
  phoneNo              String?
  userName             String?
  userNameRegular      String?
  userNameProfessional String?
  userNameSocial       String?
  userNameGamer        String?
  userNameAnonymous    String?
  firstName            String?
  lastName             String?
  address              String?
  bio                  String?
  bioTags              String?
  dateOfBirth          DateTime?
  country              String?
  countryCode          String?
  state                String?
  city                 String?
  zipCode              String?
  user                 User      @relation(fields: [userId], references: [id])
  userId               Int       @unique
}

model AccountCode {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  regCode   String?
  resetCode String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?
  published Boolean  @default(false)
  viewCount Int      @default(0)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}
